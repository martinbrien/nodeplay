---
- hosts: localhost
  become: true
  vars:
          ansible_python_interpreter: /usr/bin/python2 # ansible is python2 but arch has no python2 on install
  tasks:
    - import_tasks: ./auth.yml         
  
    - name: packages # key packages needed to get going 
      package: name={{item}} state=present
      with_items:
           - base-devel # mkpkg requirement 
           - jq # for parsing linode api result
           - sshpass # i think this needed got become:true
           - python2-pip  # pip2 needed to install linode-pyhton module

    - pip: name=linode-python executable=/usr/bin/pip2  # linode-python module required (replace with api?)
    - pip: name=lxml executable=/usr/bin/pip2 # ansible xml modeule require this

    - import_tasks: ./cleanslate.yml    
    - import_tasks: ./domains.yml

- hosts: "{{hostname}}"
  remote_user: root
  vars:
      password: 5HyYZiO07N3zE
#      password: $(openssl passwd -1 02eb!!!!m)
  tasks:
    - import_tasks: ./setupArchlinux.yml
      when: ansible_os_family == "Archlinux"

    - import_tasks: ./setupDebian.yml
      when: ansible_os_family == "Debian"

      #    - import_tasks: ./r-packages.yml   # install core AUR packages
    - import_tasks: ./pip-packages.yml
    - import_tasks: ./nginx.yml

- hosts: "{{hostname}}"
  remote_user: "{{username}}"
  tasks:
    - import_tasks: ./packagesArchlinux.yml     # install trizen from github and build locally (requires mkpkg module)
      when: ansible_os_family == "Archlinux"
    - import_tasks: ./tarsnap.yml    # extact latest tarsnap archive
    - import_tasks: ./dotfiles.yml   # set up config files
      #    - import_tasks: ./webgit.yml     # stagit setup
      #   - import_tasks: ./shinyunits.yml # creates service units for shiny apps

      #    - name: start services           # start services
      #      shell: systemctl enable --now {{ item }}
      #      with_items:
      #         - cronie
      #         - swapspace
      #         - nginx
      #      become: true
    
    - name: Create tarsnap cronjob   #
      cron: 
        special_time="hourly" 
          name="tarsnapper" 
          job="tarsnapper -c tarsnapper.conf make"

- hosts: "{{hostname}}"
  remote_user: root
  vars:
      password: 5HyYZiO07N3zE
  tasks:
    - name: start service
      shell: systemctl enable --now nginx

